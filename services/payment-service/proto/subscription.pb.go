// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/subscription.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSubscriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CustomerEmail string                 `protobuf:"bytes,1,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	PlanName      string                 `protobuf:"bytes,2,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	Price         float64                `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Currency      string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubscriptionRequest) Reset() {
	*x = CreateSubscriptionRequest{}
	mi := &file_proto_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionRequest) ProtoMessage() {}

func (x *CreateSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSubscriptionRequest) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *CreateSubscriptionRequest) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *CreateSubscriptionRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateSubscriptionRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type CreateSubscriptionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateSubscriptionResponse) Reset() {
	*x = CreateSubscriptionResponse{}
	mi := &file_proto_subscription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionResponse) ProtoMessage() {}

func (x *CreateSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubscriptionResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *CreateSubscriptionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateSubscriptionResponse) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateSubscriptionResponse) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type GetSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_proto_subscription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *GetSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type GetSubscriptionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	CustomerEmail  string                 `protobuf:"bytes,2,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	PlanName       string                 `protobuf:"bytes,3,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	Price          float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Currency       string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	StartDate      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSubscriptionResponse) Reset() {
	*x = GetSubscriptionResponse{}
	mi := &file_proto_subscription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionResponse) ProtoMessage() {}

func (x *GetSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{3}
}

func (x *GetSubscriptionResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *GetSubscriptionResponse) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *GetSubscriptionResponse) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *GetSubscriptionResponse) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetSubscriptionResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetSubscriptionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetSubscriptionResponse) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetSubscriptionResponse) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetSubscriptionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetSubscriptionResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CancelSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CancelSubscriptionRequest) Reset() {
	*x = CancelSubscriptionRequest{}
	mi := &file_proto_subscription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionRequest) ProtoMessage() {}

func (x *CancelSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{4}
}

func (x *CancelSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type CancelSubscriptionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CancelSubscriptionResponse) Reset() {
	*x = CancelSubscriptionResponse{}
	mi := &file_proto_subscription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionResponse) ProtoMessage() {}

func (x *CancelSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{5}
}

func (x *CancelSubscriptionResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *CancelSubscriptionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CancelSubscriptionResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RenewSubscriptionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RenewSubscriptionRequest) Reset() {
	*x = RenewSubscriptionRequest{}
	mi := &file_proto_subscription_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewSubscriptionRequest) ProtoMessage() {}

func (x *RenewSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*RenewSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{6}
}

func (x *RenewSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type RenewSubscriptionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	EndDate        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RenewSubscriptionResponse) Reset() {
	*x = RenewSubscriptionResponse{}
	mi := &file_proto_subscription_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RenewSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewSubscriptionResponse) ProtoMessage() {}

func (x *RenewSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*RenewSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{7}
}

func (x *RenewSubscriptionResponse) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *RenewSubscriptionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RenewSubscriptionResponse) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type ListSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CustomerEmail string                 `protobuf:"bytes,1,opt,name=customer_email,json=customerEmail,proto3" json:"customer_email,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsRequest) Reset() {
	*x = ListSubscriptionsRequest{}
	mi := &file_proto_subscription_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsRequest) ProtoMessage() {}

func (x *ListSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{8}
}

func (x *ListSubscriptionsRequest) GetCustomerEmail() string {
	if x != nil {
		return x.CustomerEmail
	}
	return ""
}

func (x *ListSubscriptionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSubscriptionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListSubscriptionsResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Subscriptions []*GetSubscriptionResponse `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	Total         int32                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                      `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsResponse) Reset() {
	*x = ListSubscriptionsResponse{}
	mi := &file_proto_subscription_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsResponse) ProtoMessage() {}

func (x *ListSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{9}
}

func (x *ListSubscriptionsResponse) GetSubscriptions() []*GetSubscriptionResponse {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *ListSubscriptionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubscriptionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSubscriptionsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_proto_subscription_proto protoreflect.FileDescriptor

const file_proto_subscription_proto_rawDesc = "" +
	"\n" +
	"\x18proto/subscription.proto\x12\fsubscription\x1a\x1fgoogle/protobuf/timestamp.proto\"\x91\x01\n" +
	"\x19CreateSubscriptionRequest\x12%\n" +
	"\x0ecustomer_email\x18\x01 \x01(\tR\rcustomerEmail\x12\x1b\n" +
	"\tplan_name\x18\x02 \x01(\tR\bplanName\x12\x14\n" +
	"\x05price\x18\x03 \x01(\x01R\x05price\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\"\xcf\x01\n" +
	"\x1aCreateSubscriptionResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x129\n" +
	"\n" +
	"start_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"A\n" +
	"\x16GetSubscriptionRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"\xb8\x03\n" +
	"\x17GetSubscriptionResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12%\n" +
	"\x0ecustomer_email\x18\x02 \x01(\tR\rcustomerEmail\x12\x1b\n" +
	"\tplan_name\x18\x03 \x01(\tR\bplanName\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x129\n" +
	"\n" +
	"start_date\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartDate\x125\n" +
	"\bend_date\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"D\n" +
	"\x19CancelSubscriptionRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"\x98\x01\n" +
	"\x1aCancelSubscriptionResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"C\n" +
	"\x18RenewSubscriptionRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\"\x93\x01\n" +
	"\x19RenewSubscriptionResponse\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x125\n" +
	"\bend_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendDate\"k\n" +
	"\x18ListSubscriptionsRequest\x12%\n" +
	"\x0ecustomer_email\x18\x01 \x01(\tR\rcustomerEmail\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\xa8\x01\n" +
	"\x19ListSubscriptionsResponse\x12K\n" +
	"\rsubscriptions\x18\x01 \x03(\v2%.subscription.GetSubscriptionResponseR\rsubscriptions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit2\x93\x04\n" +
	"\x13SubscriptionService\x12g\n" +
	"\x12CreateSubscription\x12'.subscription.CreateSubscriptionRequest\x1a(.subscription.CreateSubscriptionResponse\x12^\n" +
	"\x0fGetSubscription\x12$.subscription.GetSubscriptionRequest\x1a%.subscription.GetSubscriptionResponse\x12g\n" +
	"\x12CancelSubscription\x12'.subscription.CancelSubscriptionRequest\x1a(.subscription.CancelSubscriptionResponse\x12d\n" +
	"\x11RenewSubscription\x12&.subscription.RenewSubscriptionRequest\x1a'.subscription.RenewSubscriptionResponse\x12d\n" +
	"\x11ListSubscriptions\x12&.subscription.ListSubscriptionsRequest\x1a'.subscription.ListSubscriptionsResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_subscription_proto_rawDescOnce sync.Once
	file_proto_subscription_proto_rawDescData []byte
)

func file_proto_subscription_proto_rawDescGZIP() []byte {
	file_proto_subscription_proto_rawDescOnce.Do(func() {
		file_proto_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_subscription_proto_rawDesc), len(file_proto_subscription_proto_rawDesc)))
	})
	return file_proto_subscription_proto_rawDescData
}

var file_proto_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_subscription_proto_goTypes = []any{
	(*CreateSubscriptionRequest)(nil),  // 0: subscription.CreateSubscriptionRequest
	(*CreateSubscriptionResponse)(nil), // 1: subscription.CreateSubscriptionResponse
	(*GetSubscriptionRequest)(nil),     // 2: subscription.GetSubscriptionRequest
	(*GetSubscriptionResponse)(nil),    // 3: subscription.GetSubscriptionResponse
	(*CancelSubscriptionRequest)(nil),  // 4: subscription.CancelSubscriptionRequest
	(*CancelSubscriptionResponse)(nil), // 5: subscription.CancelSubscriptionResponse
	(*RenewSubscriptionRequest)(nil),   // 6: subscription.RenewSubscriptionRequest
	(*RenewSubscriptionResponse)(nil),  // 7: subscription.RenewSubscriptionResponse
	(*ListSubscriptionsRequest)(nil),   // 8: subscription.ListSubscriptionsRequest
	(*ListSubscriptionsResponse)(nil),  // 9: subscription.ListSubscriptionsResponse
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
}
var file_proto_subscription_proto_depIdxs = []int32{
	10, // 0: subscription.CreateSubscriptionResponse.start_date:type_name -> google.protobuf.Timestamp
	10, // 1: subscription.CreateSubscriptionResponse.end_date:type_name -> google.protobuf.Timestamp
	10, // 2: subscription.GetSubscriptionResponse.start_date:type_name -> google.protobuf.Timestamp
	10, // 3: subscription.GetSubscriptionResponse.end_date:type_name -> google.protobuf.Timestamp
	10, // 4: subscription.GetSubscriptionResponse.created_at:type_name -> google.protobuf.Timestamp
	10, // 5: subscription.GetSubscriptionResponse.updated_at:type_name -> google.protobuf.Timestamp
	10, // 6: subscription.CancelSubscriptionResponse.updated_at:type_name -> google.protobuf.Timestamp
	10, // 7: subscription.RenewSubscriptionResponse.end_date:type_name -> google.protobuf.Timestamp
	3,  // 8: subscription.ListSubscriptionsResponse.subscriptions:type_name -> subscription.GetSubscriptionResponse
	0,  // 9: subscription.SubscriptionService.CreateSubscription:input_type -> subscription.CreateSubscriptionRequest
	2,  // 10: subscription.SubscriptionService.GetSubscription:input_type -> subscription.GetSubscriptionRequest
	4,  // 11: subscription.SubscriptionService.CancelSubscription:input_type -> subscription.CancelSubscriptionRequest
	6,  // 12: subscription.SubscriptionService.RenewSubscription:input_type -> subscription.RenewSubscriptionRequest
	8,  // 13: subscription.SubscriptionService.ListSubscriptions:input_type -> subscription.ListSubscriptionsRequest
	1,  // 14: subscription.SubscriptionService.CreateSubscription:output_type -> subscription.CreateSubscriptionResponse
	3,  // 15: subscription.SubscriptionService.GetSubscription:output_type -> subscription.GetSubscriptionResponse
	5,  // 16: subscription.SubscriptionService.CancelSubscription:output_type -> subscription.CancelSubscriptionResponse
	7,  // 17: subscription.SubscriptionService.RenewSubscription:output_type -> subscription.RenewSubscriptionResponse
	9,  // 18: subscription.SubscriptionService.ListSubscriptions:output_type -> subscription.ListSubscriptionsResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_subscription_proto_init() }
func file_proto_subscription_proto_init() {
	if File_proto_subscription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_subscription_proto_rawDesc), len(file_proto_subscription_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_subscription_proto_goTypes,
		DependencyIndexes: file_proto_subscription_proto_depIdxs,
		MessageInfos:      file_proto_subscription_proto_msgTypes,
	}.Build()
	File_proto_subscription_proto = out.File
	file_proto_subscription_proto_goTypes = nil
	file_proto_subscription_proto_depIdxs = nil
}
